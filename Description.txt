 Metrics selection:

1- RELEASE_ID: It is important to track which version of the software the class was released
               in to identify any fixes specific to that version and monitor the evolution
               of the class over time.

2- FILE_NAME: The file name is useful for uniquely identifying the class within the project and
              for facilitating reference to it.

3- SIZE: The size of the class in terms of lines of code provides a measure of its complexity and
         the amount of work done on it.

4,5,6- LOC_ADDED, LOC_ADDED_AVG, LOC_ADDED_MAX: Count the number of lines of code added to the class,
                                                providing information on the amount and distribution
                                                of changes made.

7,8,9- LOC_REMOVED, LOC_REMOVED_AVG, LOC_REMOVED_MAX: Count the number of lines of code removed from
                                                      the class, providing information on the amount
                                                      and distribution of changes made.

10,11,12- LOC_TOUCHED, LOC_TOUCHED_AVG, LOC_TOUCHED_MAX: Count the total number of lines of code added
                                        and removed (touched) in the class,
                                        providing information about its editing activity over time.

13,14,15- CHURN, CHURN_AVG, CHURN_MAX: Represent the churn, the total of lines of code added and removed
                                       in the class, providing information on its modification activity
                                       and the complexity of the modifications made.

16- NUMBER_OF_REVISIONS: Indicates the total number of revisions made on the class,
                         providing a measure of the modification activity.

17- NUMBER_OF_DEFECT_FIXES: Counts the total number of times a defect in the class has been fixed,
                            providing information on its stability and the presence of recurring problems.

18- NUMBER_OF_AUTHORS: Indicates the total number of authors who contributed to the class code.

19- IS_BUGGY: This is the target variable you are trying to predict,indicating whether the class
              is considered "buggy" or not based on the other metrics provided.